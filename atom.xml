<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Proteomic-Genomic Nexus (AP11)]]></title>
  <link href="http://IntersectAustralia.github.com/ap11/atom.xml" rel="self"/>
  <link href="http://IntersectAustralia.github.com/ap11/"/>
  <updated>2013-04-30T15:21:11+10:00</updated>
  <id>http://IntersectAustralia.github.com/ap11/</id>
  <author>
    <name><![CDATA[Intersect and Ramaciotti Institute (UNSW)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Final product]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2013/04/30/final-product/"/>
    <updated>2013-04-30T13:20:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2013/04/30/final-product</id>
    <content type="html"><![CDATA[<p>The AP11 project (Proteomic-genomic Nexus) has reached end of development and we are happy to announce the proteomic-genomic nexus tools are available
for the general public.</p>

<!-- more -->


<h1>Introductory Product Information</h1>

<p><em>The Proteomic-Genomic Nexus</em> is a software package that is designed to integrate genomic and transcriptomic data generated from next-generation sequencing with proteomic data generated from protein mass spectrometry.</p>

<p>The primary users of this product will be biologists who would like to integrate their genomics and proteomics data, and be able to visualize them. The tool will be deployed in a number of pilot projects in collaboration with several research groups in Australia and internationally. The research domains span across basic science, primary industry, and medical research.</p>

<p>By using the Proteomic-Genomic Nexus, users will be able to co-visualise genomics, transcriptomic and proteomic data using the Integrative Genomics Viewer. We will be able to validate the existence of genes using peptides identified from mass spectrometry experiments. We will use this to verify alternatively spliced genes by searching for peptides that span across exon-exon junctions.</p>

<h1>Instructional Product Information</h1>

<p>The tools from developed as a part of the Proteomics-Genomics Nexus project allowed us to visualize all the peptides from the proteome of an organism and efficiently analyze the data.</p>

<p>Using the Samifier tool, we co-visualized the genomics, transcriptomics, and proteomics data of Saccharomyces cerevisiae using the Integrative Genomics Viewer (IGV). An example of peptides visualized using IGV is shown in the figure below. The Integrative Genomics Viewer was used to visualize experimental peptides for the yeast 40S ribosomal protein S7-B (YNL096C). A peptide which spans exon-exon junction is highlighted in the red box. This analysis has also been done on a genome / proteome scale.</p>

<p><img src="https://github.com/IntersectAustralia/ap11_samifier/wiki/images/Application_Description/Figure_2_IGV_Example_1.png" width="550"></p>

<p>The Results Analyser was used to verify proteins coded in the Campylobacter concisus (an emergent gut pathogen)  and Saccharomyces cerevisiae (Baker’s yeast) genome. Proteins were verified on the basis of two or more peptide ‘hits’, with Mascot scores exceeding an identity threshold. Firstly, for Campylobacter concisus, 66% (1320/2002) of previously known proteins in Uniprot were verified with peptides identified from mass spectrometry experiments. Secondly, for Saccharomyces cerevisiae, 61% (4046/6621) of the proteins as well as 25% (78/284) of all splice junctions in the yeast proteome were verified from a comprehensive proteome analysis (de Godoy et al., 2008, Nature 455:1251-1254). We are in the process of performing analysis on human proteomics data to find evidence for peptides that spans across exon-exon junctions. This will validate the existence of known and novel alternatively spliced transcripts.</p>

<h2>Getting started</h2>

<p>Please refer to the <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/Deployment-guide">deployment guide</a> on instructions on how to download or build the tools.</p>

<h2>Documentation</h2>

<p>There are a number of manual and document resources available:</p>

<ul>
<li><p><a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/User-manual">User manual</a></p></li>
<li><p>Github repositories:</p>

<p>&#8211; <a href="https://github.com/IntersectAustralia/ap11_samifier/">AP11 tools</a></p>

<p>&#8211; <a href="https://github.com/IntersectAustralia/ap11_webapp">Web application</a></p></li>
<li><p><a href="http://intersectaustralia.github.io/ap11/">Blog</a></p></li>
<li><p>Technical documentation:</p>

<p>&#8211; <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki">AP11 tools</a> -  includes links to deployment and developer guides</p>

<p>&#8211; <a href="https://github.com/IntersectAustralia/ap11_webapp/wiki">Web application</a> - includes links to deployment and developer guides</p></li>
<li><p>Overview diagram</p></li>
</ul>


<p>The following diagram (from the wiki,) outlines where the different tools fit within the genomics/proteomics research paths.</p>

<p><img src="https://github.com/IntersectAustralia/ap11_samifier/wiki/images/Application_Description/Figure_1_Analytical_pipeline_1.png"></p>

<h1>Product re-usability information</h1>

<p>A number of Java classes where implemented to parse the specific elements of information required by the tools. Their implementation maybe of interest to
the genomics and/or proteomics community. They are found in <a href="https://github.com/IntersectAustralia/ap11_samifier/tree/master/src/au/org/intersect/samifier/parser">here</a>
and include:</p>

<ul>
<li><p>A FASTA file reader with caching that can read contig files (see fastaParserImpl.java)</p></li>
<li><p>A GFF parser (see GenomeParserImpl.java)</p></li>
<li><p>A mzIdentML reader (see mzidentml package), that although specific (it extracts the peptide results required by other parts of the system) is flexible enough to
work with version 1.0 and 1.1 of the standard.</p></li>
</ul>


<p>There are also a couple of command line <a href="https://github.com/IntersectAustralia/ap11_samifier/tree/master/src/au/org/intersect/samifier/tool">utilities</a></p>

<ul>
<li><p>CodonFinder &lt;FASTA-file> &lt;Translation-table> {+|-} [&lt;start>] [&lt;end>]</p>

<p>Prints codons in whole fasta file or between (optional) &lt;start> and &lt;end> parameters. The + or - parameter represents forward or reverse strand translation.</p></li>
<li><p>NucleotideToAminoacid &lt;Translation-table> &lt;protein-sequence> [&lt;frame>]</p>

<p>Produces the aminoacid sequence for a given nucleotide sequence, optionally applying a &lt;frame> before translation.</p></li>
</ul>


<h1>Contextual Product Information</h1>

<p>All code is licensed under the GNU GPL v3 license - see LICENSE.txt in each code repository for license text. Documentation (contained in the Github wiki) is licensed under Creative Commons Attribution-Share Alike</p>

<p>Due to the extensive testing by the research stakeholders, the software is now robust, mature and fit for purpose. The ongoing maintenance of the software may occur in a number of ways, as appropriate:</p>

<ul>
<li>Intersect provides a 3 month warranty period for the project</li>
<li>The team at the UNSW Ramaciotti Centre may continue to enhance the software</li>
<li><p>Further enhancements and fixes may be done by Intersect, under the support and maintenance agreement between UNSW and Intersect.
T
he sustainability of the product has been considered throughout the project and the software has been designed to maximise future maintainability:</p></li>
<li><p>The software has an extensive suite of automated unit tests that clearly describe the expected behaviour of the code.</p></li>
<li>This is augmented by a suite of integration tests created by the research stakeholders.</li>
<li>The code is open source so that other groups can contribute code back to the project.</li>
<li>Using Github makes it easy for changes from other groups to easily be incorporated back into the main code base.</li>
<li>The system has extensive documentation to explain the design and modules of the system.</li>
<li>Most of the software was developed in Java as this is the language that the research team at UNSW are familiar with.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[User Testing Report]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2013/04/15/user-testing-report/"/>
    <updated>2013-04-15T17:00:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2013/04/15/user-testing-report</id>
    <content type="html"><![CDATA[<p>User Testing has been completed on the AP11 application. Our user testing was completed by Ignatius Pang and Aidan Tay, who have extensive experience in genomics and proteomics and are part of the Ramaciotti Centre at UNSW. They used realistic data (in terms of content and size) for the testing, and their feedback was invaluable in helping produce a high quality solution. Read on for more info about their findings.</p>

<!-- more -->


<h2>The Application</h2>

<p>An overview of the application can be found on our wiki at <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/Application-description">Application Description</a>.</p>

<p>Source code can be found at:</p>

<p><a href="https://github.com/IntersectAustralia/ap11_samifier">Samifier Source Code - Github</a> - this is the java command line components described above</p>

<p>and</p>

<p><a href="https://github.com/IntersectAustralia/ap11_webapp">Webapp Source Code - Github</a> - this is the webapp that&#8217;s used to record experimental details and provide the feed to RDA.</p>

<p>We also have a <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/User-manual">User Manual</a>, and <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/Developers-Guide">Developers Guide</a>. Check out the <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki">Wiki Home Page</a> for further useful guides and documents.</p>

<h2>Testing</h2>

<p>Ignatius Pang and Aidan Tay from UNSW have written up a fantastic account of the testing they performed - this can be found at <a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/User-assisted-testing">User assisted testing report</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Presentation at Lorne Proteomics Conference 2013]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2013/02/18/presentation-at-lorne-proteomics-conference-2013/"/>
    <updated>2013-02-18T10:37:00+11:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2013/02/18/presentation-at-lorne-proteomics-conference-2013</id>
    <content type="html"><![CDATA[<p>Marc Wilkins presented a poster titled &#8220;Validation of Genomes and Transcriptomes with Proteomics Data&#8221; at the 18th meeting of the Australian Proteomics Society at Lorne. Marc reported that the poster was of exceptional interest. He said that over the two hour session, there was a constant stream of people keen for an explanation. Groups were from local facilities (including APAF) along with some from overseas.</p>

<p>This is a great success for the project and we look forward to hearing more as people start trying out the software.</p>

<p><a href="https://github.com/IntersectAustralia/ap11_samifier/wiki/Product%20Overview.pdf">link to the poster</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes from demo 2]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2012/09/13/notes-from-demo-2/"/>
    <updated>2012-09-13T17:24:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2012/09/13/notes-from-demo-2</id>
    <content type="html"><![CDATA[<p>Demo number two was about seeing the samifier and the <em>predicted</em> proteins implemented in Java. We had a chat too about how
the web app was going.</p>

<!-- more -->


<p>We installed the java command line tools and here you can see their output when no parameters are given:</p>

<p>The <em>samifier</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ java -jar samifier.jar
</span><span class='line'>usage: samifier -c &lt;chromosomeDir&gt; -g &lt;genomeFile&gt; -m &lt;mappingFile&gt; -o
</span><span class='line'>       &lt;outputFile&gt; -r &lt;searchResultsFile&gt;
</span><span class='line'> -c &lt;chromosomeDir&gt;       Directory containing the chromosome files in
</span><span class='line'>                          FASTA format for the given genome
</span><span class='line'> -g &lt;genomeFile&gt;          Genome file in gff format
</span><span class='line'> -m &lt;mappingFile&gt;         File mapping protein identifier to ordered locus
</span><span class='line'>                          name
</span><span class='line'> -o &lt;outputFile&gt;          Filename to write the SAM format file to
</span><span class='line'> -r &lt;searchResultsFile&gt;   Mascot search results file in txt format
</span></code></pre></td></tr></table></div></figure>


<p>and the <em>protein generator</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ java -jar protein_generator.jar
</span><span class='line'>usage: protein_generator -d &lt;Database Name&gt; -f &lt;Genome File&gt; [-g &lt;Glimmer
</span><span class='line'>       File&gt;] [-i &lt;Split Interval&gt;] -o &lt;Output File&gt; [-t &lt;Translation
</span><span class='line'>       Table File&gt;]
</span><span class='line'> -d &lt;Database Name&gt;            Database name
</span><span class='line'> -f &lt;Genome File&gt;              Genome file in FASTA format
</span><span class='line'> -g &lt;Glimmer File&gt;             Glimmer txt file. Can&#39;t be used with the -i
</span><span class='line'>                               option.
</span><span class='line'> -i &lt;Split Interval&gt;           Size of the intervals into which the genome
</span><span class='line'>                               will be split. Can&#39;t be used with the -g
</span><span class='line'>                               option.
</span><span class='line'> -o &lt;Output File&gt;              Filename to write the FASTA format file to
</span><span class='line'> -t &lt;Translation Table File&gt;   File containing a mapping of codons to
</span><span class='line'>                               amino acids, in the format used by NCBI.
</span></code></pre></td></tr></table></div></figure>


<p>although the option <em>-i</em> is still pending, it is meant to be for <em>virtual proteins</em> for next sprint.</p>

<p>The <em>samifier</em> code is in <a href="https://github.com/IntersectAustralia/ap11_samifier">here</a> and the
<em>protein generator</em> <a href="https://github.com/IntersectAustralia/ap11_protein_generator">here</a>.</p>

<p>We also demoed in the web application the new look &amp; feel, based on the <a href="http://www.systemsbiology.org.au/">SBI</a>
website. It&#8217;s still work in progress as we need to define how the menus are going to change for this
application. That will be a discussion for our next planning meeting. We also showed how to enter an <em>input
collection</em> in the system, although there were also questions pending in terms of the metadata model.</p>

<p>For this sprint we want to focus in working with the samifier (reverse strand proteins, the mzIdentML
format,) and the protein generator.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From Mascot to sequence by hand]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2012/09/13/from-mascot-to-sequence-by-hand/"/>
    <updated>2012-09-13T17:24:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2012/09/13/from-mascot-to-sequence-by-hand</id>
    <content type="html"><![CDATA[<p>Working with reverse strand proteins requires special attention, as the position arithmetic and logic needs
to be worked out with care. As developers, we need to have a documented procedure to be able to check
amino acid and nucleotide sequences and this post is an attempt in that direction.</p>

<!-- more -->


<p>First, given an <em>accession</em> table and mascot results (in DAT) format, the following bash command
outputs proteins of interest in the mascot search</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>awk <span class="s1">&#39;$1 ~ /C$/ &amp;&amp; $3 ~ /_YEAST$/{print $3}&#39;</span> accession.txt | <span class="k">while </span><span class="nb">read </span>ploc; <span class="k">do </span>grep <span class="s2">&quot;$ploc&quot;</span> ETD_exclusion_with_inclusion_120517_Band14.txt ; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>We get lines as the followings:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>...
</span><span class='line'>q94_p3=0,755.392593,0.000455,6,IDQPAGR,51,000000000,24.30,0000000000000001020,0,0;&quot;YP264_YEAST&quot;:0:300:306:1
</span><span class='line'>q187_p8=0,803.377319,-0.000271,2,ASDIENR,6,000000000,12.48,0000002000000001000,0,0;&quot;YPR46_YEAST&quot;:0:79:85:1
</span><span class='line'>q317_p2=1,864.437469,-0.003421,4,AMKSNEK,8,005000070,11.04,0000002000000000020,0,0;&quot;YRB30_YEAST&quot;:0:182:188:2
</span><span class='line'>q356_p6=0,880.429031,0.000417,4,GNDVYSAK,24,0000000030,13.38,0000000000000002010,0,0;&quot;APN1_YEAST&quot;:0:48:55:1,&quot;VPS10_TALSN&quot;:0:118:125:1
</span><span class='line'>q1253_p1=2,1286.609390,0.000658,5,KTKDMSGGWK,33,040300600030,12.57,0000000001000002010,0,0;&quot;ARB1_YEAST&quot;:0:223:232:3
</span><span class='line'>q1253_p3=2,1286.609390,0.000658,5,KTKDMSGGWK,33,070000600030,11.03,0000000001000002010,0,0;&quot;ARB1_YEAST&quot;:0:223:232:3
</span><span class='line'>&quot;ARB1_YEAST&quot;=68334.57,&quot;ABC transporter ATP-binding protein ARB1 OS=Saccharomyces cerevisiae (strain ATCC 204508 / S288c) GN=ARB1 PE=1 SV=1&quot;
</span><span class='line'>q492_p1=2,943.473938,-0.002490,4,SSKVTKSK,8,0060000000,18.26,0000000002000000000,0,0;&quot;ARN1_YEAST&quot;:0:180:187:1,&quot;LPXD_RICM5&quot;:0:330:337:1
</span><span class='line'>q492_p2=2,943.473938,-0.002490,4,SSKVTKSK,8,0600000000,18.26,0000000002000000000,0,0;&quot;ARN1_YEAST&quot;:0:180:187:1,&quot;LPXD_RICM5&quot;:0:330:337:1
</span><span class='line'>q554_p4=0,967.473953,0.002495,5,TIVDTIAR,46,0000060000,21.85,0000001001000002010,0,0;&quot;ARX1_YEAST&quot;:0:225:232:1
</span><span class='line'>q19_p9=1,703.386429,-0.000781,4,NEVKSK,18,00000000,13.94,0000000000100002000,0,0;&quot;ATG26_YEAST&quot;:0:144:149:1,&quot;ILVD_SULDN&quot;:0:534:539:1,&quot;LOC1_DEBHA&quot;:0:163:168:1
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>Let&#8217;s pick a protein match there <strong>ARB1_YEAST</strong>. We search for that protein in <a href="http://www.uniprot.org/">UniProtKB</a>
and we find it as shown in image below</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/protein-search-1.png"><img src="http://IntersectAustralia.github.com/ap11/files/protein-search-1.png" width="550"></a></p>

<p>We see there the locus name <strong>YER036C</strong>, which we would find in the <em>accession.txt</em> if we looked for our protein of interest. In the
UniProtKB there is a <strong>cross-refs</strong> link which we click. It just points to one of the sections at the bottom of the page as shown here</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/protein-search-2.png"><img src="http://IntersectAustralia.github.com/ap11/files/protein-search-2.png" width="550"></a></p>

<p>We follow the link to the EMBL sequence database, particularly the translation code shown. Follow that in new window as it is another
website, <a href="http://www.ebi.ac.uk/">EMBL-EBI</a>, particularly the page describing the sequence for that protein</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/protein-search-3.png"><img src="http://IntersectAustralia.github.com/ap11/files/protein-search-3.png" width="550"></a></p>

<p>as the preview above should confirm. There we just go to sequence (see red arrow), a link to the bottom, where we see
the sequence as displayed in here</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/protein-search-4.png"><img src="http://IntersectAustralia.github.com/ap11/files/protein-search-4.png" width="550"></a></p>

<p>So, just click the &#8220;Show full sequence&#8221; link (JavaScript) to reveal the full sequence if it is too long. Voila, the amino acid sequence!</p>

<p>Bear in mind that this whole exercise assumes a reference genome. You can see it just below the locus name in the first screenshot above. Hope
this instructions help to navigate the complex web of proteomic/genomic data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[notes from demo 1]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2012/08/29/notes-from-demo-1/"/>
    <updated>2012-08-29T13:40:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2012/08/29/notes-from-demo-1</id>
    <content type="html"><![CDATA[<p>We had our first sprint demo on the 27/Aug, which didn&#8217;t go without its hurdles. We showed the web app site, with initial
user registration, user management and experiments page.</p>

<!-- more -->


<p>This is a screenshot of the login page (click to see larger picture)</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/web-app-002.png"><img src="http://IntersectAustralia.github.com/ap11/files/web-app-002.png" width="350"></a></p>

<p>and the self-registration page</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/web-app-003.png"><img src="http://IntersectAustralia.github.com/ap11/files/web-app-003.png" width="350"></a></p>

<p>and the experiments page</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/web-app-001.png"><img src="http://IntersectAustralia.github.com/ap11/files/web-app-001.png" width="350"></a></p>

<p>Then we discussed the virtual protein generator. We realised it should be called Protein Generator, as it is meant to generate two kinds
of protein DB files: one for predicted proteins, using gene scanner software as <a href="http://cbcb.umd.edu/software/glimmer/">glimmer</a>;
and <em>virtual proteins</em>, just generated by splitting the genome in contiguous blocks of certain size. We are aiming to have a first go
with this product this sprint.</p>

<p>The <em>samifier</em> was presented at the end. We had issues with the genome being split in several files, but at the end showed the
prototype, which was written in Ruby. We are aiming to produce a Java version by the end of this week to test it with researchers
in other kinds of datasets.</p>

<p>Researchers were happy with the demostration despite little issues, and are looking forward to the evolution of these initial
prototypes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[proteomic-genomic nexus presentation]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2012/08/22/proteomic-genomic-nexus-presentation/"/>
    <updated>2012-08-22T13:34:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2012/08/22/proteomic-genomic-nexus-presentation</id>
    <content type="html"><![CDATA[<p>Ignatious just presented the project to the rest of the lab. One finds the slides <a href="http://IntersectAustralia.github.com/ap11/files/Proteomic-Genomic_Nexus.pptx">here</a>. The general feedback was positive,
bringing some ideas of what features we could have for IGV.</p>

<p><a href="http://IntersectAustralia.github.com/ap11/files/Proteomic-Genomic_Nexus.pptx"><img src="http://IntersectAustralia.github.com/ap11/files/Proteomic-Genomic_Nexus.jpg" width="350"></a></p>

<p>On the other hand, development just started on the <em>samifier</em> and the team is getting closer to a first cut. It is a prototype written in Ruby.
It won&#8217;t have reverse strand handling, but will be able to generate fragments of forward encoded proteins, even if they are split by introns.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SRS pages]]></title>
    <link href="http://IntersectAustralia.github.com/ap11/blog/2012/08/08/srs/"/>
    <updated>2012-08-08T14:10:00+10:00</updated>
    <id>http://IntersectAustralia.github.com/ap11/blog/2012/08/08/srs</id>
    <content type="html"><![CDATA[<p>The Sofware Requirements Specification (SRS) is live as a set of pages answering some general questions about the project.</p>

<p>Here they are:</p>

<ol>
<li>Who is doing this? <a href="http://IntersectAustralia.github.com/ap11/product-team/">Product team</a></li>
<li>Why is it worth doing? <a href="http://IntersectAustralia.github.com/ap11/why/">Main goals</a></li>
<li>Who is this for? <a href="http://IntersectAustralia.github.com/ap11/users/">Users</a></li>
<li>What is the added value? <a href="http://IntersectAustralia.github.com/ap11/measuring-success/">Specific goals</a></li>
<li>How is it going to work? <a href="http://IntersectAustralia.github.com/ap11/design/">Features and architecture</a></li>
<li>What will be the outcomes? <a href="http://IntersectAustralia.github.com/ap11/outcomes/">Products and outcomes</a></li>
</ol>


<p>We will be updating these entries as we go and are a key reference in the evolution of the project.</p>
]]></content>
  </entry>
  
</feed>
